{"version":3,"file":"KYC-EfRseuTe.js","sources":["../../src/components/PersonaVerification.tsx","../../src/pages/account/KYC.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Shield, Loader2 } from 'lucide-react';\r\n\r\ninterface PersonaVerificationProps {\r\n  onComplete?: (inquiryId: string) => void;\r\n  onError?: (error: Error) => void;\r\n}\r\n\r\nconst PersonaVerification: React.FC<PersonaVerificationProps> = ({ \r\n  onComplete, \r\n  onError \r\n}) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleStartVerification = async () => {\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      console.log('üöÄ Starting Persona verification...');\r\n\r\n      // Get template ID and environment ID from environment variables\r\n      const templateId = import.meta.env.VITE_PERSONA_TEMPLATE_ID || 'itmpl_aHKymLqP5kWjmgQyZ5jrSUgDHDpF';\r\n      const environmentId = import.meta.env.VITE_PERSONA_ENVIRONMENT_ID || 'env_G6yssyR43GAhoTicT3digMzo8gUL';\r\n\r\n      console.log('üìã Template ID:', templateId);\r\n      console.log('üåç Environment ID:', environmentId);\r\n\r\n      // For Dynamic Flow Templates, use the hosted verification page\r\n      const verificationUrl = `https://withpersona.com/verify?template-id=${templateId}&environment=sandbox`;\r\n      \r\n      console.log('üîó Opening Persona verification URL:', verificationUrl);\r\n      \r\n      // Open Persona verification in new window\r\n      const personaWindow = window.open(verificationUrl, '_blank', 'width=600,height=800');\r\n      \r\n      if (!personaWindow) {\r\n        console.log('Popup blocked, redirecting in same tab...');\r\n        window.location.href = verificationUrl;\r\n        return;\r\n      }\r\n\r\n      console.log('‚úÖ Persona verification window opened');\r\n      \r\n      // Note: Completion will be handled via webhook on the backend\r\n      // The webhook will update the user's KYC status\r\n      \r\n    } catch (error) {\r\n      console.error('‚ùå Error starting Persona verification:', error);\r\n      setIsLoading(false);\r\n      onError?.(error as Error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"p-6 border-2 border-primary/20\">\r\n      <div className=\"text-center space-y-4\">\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"p-4 rounded-full bg-primary/10\">\r\n            <Shield className=\"h-12 w-12 text-primary\" />\r\n          </div>\r\n        </div>\r\n        \r\n        <div>\r\n          <h3 className=\"text-xl font-bold mb-2\">Identity Verification</h3>\r\n          <p className=\"text-muted-foreground mb-4\">\r\n            Verify your identity with Persona to complete your KYC\r\n          </p>\r\n        </div>\r\n\r\n        <Button\r\n          onClick={handleStartVerification}\r\n          disabled={isLoading}\r\n          className=\"w-full\"\r\n          size=\"lg\"\r\n        >\r\n          {isLoading ? (\r\n            <>\r\n              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n              Opening...\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Shield className=\"mr-2 h-4 w-4\" />\r\n              Start Identity Verification\r\n            </>\r\n          )}\r\n        </Button>\r\n\r\n        <p className=\"text-xs text-muted-foreground mt-4\">\r\n          Click the button above to start verification. A new window will open.\r\n        </p>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PersonaVerification;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AccountLayout from '@/components/AccountLayout';\r\nimport PersonaVerification from '@/components/PersonaVerification';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/components/ui/popover\";\r\nimport {\r\n  Command,\r\n  CommandEmpty,\r\n  CommandGroup,\r\n  CommandInput,\r\n  CommandItem,\r\n  CommandList,\r\n} from \"@/components/ui/command\";\r\nimport { \r\n  Shield, \r\n  CheckCircle, \r\n  Mail,\r\n  Phone,\r\n  User,\r\n  ArrowLeft,\r\n  ArrowRight,\r\n  ExternalLink,\r\n  ChevronDown,\r\n  Search,\r\n  Loader2\r\n} from 'lucide-react';\r\nimport { useLanguage } from '@/contexts/LanguageContext';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { apiClient } from '@/lib/api';\r\nimport { toast } from 'sonner';\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst countries = [\r\n  { code: 'US', name: 'United States', dialCode: '+1', flag: 'üá∫üá∏' },\r\n  { code: 'GB', name: 'United Kingdom', dialCode: '+44', flag: 'üá¨üáß' },\r\n  { code: 'CA', name: 'Canada', dialCode: '+1', flag: 'üá®üá¶' },\r\n  { code: 'AU', name: 'Australia', dialCode: '+61', flag: 'üá¶üá∫' },\r\n  { code: 'DE', name: 'Germany', dialCode: '+49', flag: 'üá©üá™' },\r\n  { code: 'FR', name: 'France', dialCode: '+33', flag: 'üá´üá∑' },\r\n  { code: 'IT', name: 'Italy', dialCode: '+39', flag: 'üáÆüáπ' },\r\n  { code: 'ES', name: 'Spain', dialCode: '+34', flag: 'üá™üá∏' },\r\n  { code: 'NL', name: 'Netherlands', dialCode: '+31', flag: 'üá≥üá±' },\r\n  { code: 'SE', name: 'Sweden', dialCode: '+46', flag: 'üá∏üá™' },\r\n  { code: 'NO', name: 'Norway', dialCode: '+47', flag: 'üá≥üá¥' },\r\n  { code: 'DK', name: 'Denmark', dialCode: '+45', flag: 'üá©üá∞' },\r\n  { code: 'FI', name: 'Finland', dialCode: '+358', flag: 'üá´üáÆ' },\r\n  { code: 'PL', name: 'Poland', dialCode: '+48', flag: 'üáµüá±' },\r\n  { code: 'CZ', name: 'Czech Republic', dialCode: '+420', flag: 'üá®üáø' },\r\n  { code: 'AT', name: 'Austria', dialCode: '+43', flag: 'üá¶üáπ' },\r\n  { code: 'CH', name: 'Switzerland', dialCode: '+41', flag: 'üá®üá≠' },\r\n  { code: 'BE', name: 'Belgium', dialCode: '+32', flag: 'üáßüá™' },\r\n  { code: 'IE', name: 'Ireland', dialCode: '+353', flag: 'üáÆüá™' },\r\n  { code: 'PT', name: 'Portugal', dialCode: '+351', flag: 'üáµüáπ' },\r\n  { code: 'GR', name: 'Greece', dialCode: '+30', flag: 'üá¨üá∑' },\r\n  { code: 'JP', name: 'Japan', dialCode: '+81', flag: 'üáØüáµ' },\r\n  { code: 'KR', name: 'South Korea', dialCode: '+82', flag: 'üá∞üá∑' },\r\n  { code: 'CN', name: 'China', dialCode: '+86', flag: 'üá®üá≥' },\r\n  { code: 'IN', name: 'India', dialCode: '+91', flag: 'üáÆüá≥' },\r\n  { code: 'SG', name: 'Singapore', dialCode: '+65', flag: 'üá∏üá¨' },\r\n  { code: 'AE', name: 'United Arab Emirates', dialCode: '+971', flag: 'üá¶üá™' },\r\n  { code: 'SA', name: 'Saudi Arabia', dialCode: '+966', flag: 'üá∏üá¶' },\r\n  { code: 'ZA', name: 'South Africa', dialCode: '+27', flag: 'üáøüá¶' },\r\n  { code: 'BR', name: 'Brazil', dialCode: '+55', flag: 'üáßüá∑' },\r\n  { code: 'MX', name: 'Mexico', dialCode: '+52', flag: 'üá≤üáΩ' },\r\n  { code: 'AR', name: 'Argentina', dialCode: '+54', flag: 'üá¶üá∑' },\r\n  { code: 'CL', name: 'Chile', dialCode: '+56', flag: 'üá®üá±' },\r\n  { code: 'CO', name: 'Colombia', dialCode: '+57', flag: 'üá®üá¥' },\r\n  { code: 'NZ', name: 'New Zealand', dialCode: '+64', flag: 'üá≥üáø' },\r\n];\r\n\r\nconst KYC = () => {\r\n  const { t } = useLanguage();\r\n  const { user, refreshUser, completeKYC } = useAuth();\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [selectedCountry, setSelectedCountry] = useState(countries[0]);\r\n  const [countryOpen, setCountryOpen] = useState(false);\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [emailCode, setEmailCode] = useState('');\r\n  const [isSendingEmail, setIsSendingEmail] = useState(false);\r\n  const [isVerifyingEmail, setIsVerifyingEmail] = useState(false);\r\n  const [showEmailCodeInput, setShowEmailCodeInput] = useState(false);\r\n  const [verificationStatus, setVerificationStatus] = useState({\r\n    email: user?.emailVerified || false,\r\n    phone: user?.phoneVerified || false,\r\n    identity: user?.kycStatus === 'verified',\r\n  });\r\n\r\n  // Update verification status when user data changes\r\n  useEffect(() => {\r\n    setVerificationStatus({\r\n      email: user?.emailVerified || false,\r\n      phone: user?.phoneVerified || false,\r\n      identity: user?.kycStatus === 'verified',\r\n    });\r\n  }, [user]);\r\n\r\n  // Auto-navigate to next incomplete step\r\n  useEffect(() => {\r\n    if (user) {\r\n      const nextStep = getNextIncompleteStep();\r\n      if (nextStep !== currentStep) {\r\n        setCurrentStep(nextStep);\r\n      }\r\n    }\r\n  }, [user, currentStep]);\r\n\r\n  const steps = [\r\n    {\r\n      id: 1,\r\n      title: t('Email Verification'),\r\n      description: t('Verify your email address with a confirmation link'),\r\n      icon: Mail,\r\n      status: verificationStatus.email,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: t('Phone Verification'),\r\n      description: t('Verify your phone number with a verification code'),\r\n      icon: Phone,\r\n      status: verificationStatus.phone,\r\n    },\r\n    {\r\n      id: 3,\r\n      title: t('Identity Verification'),\r\n      description: t('Verify your identity with Persona'),\r\n      icon: User,\r\n      status: verificationStatus.identity,\r\n    },\r\n  ];\r\n\r\n  const getProgressPercentage = () => {\r\n    return (currentStep / steps.length) * 100;\r\n  };\r\n\r\n  const isKYCCompleted = () => {\r\n    return verificationStatus.email && verificationStatus.phone && verificationStatus.identity;\r\n  };\r\n\r\n  const getNextIncompleteStep = () => {\r\n    if (!verificationStatus.email) return 1;\r\n    if (!verificationStatus.phone) return 2;\r\n    if (!verificationStatus.identity) return 3;\r\n    return 3; // All completed\r\n  };\r\n\r\n  const canNavigateToStep = (step: number) => {\r\n    if (step === 1) return true; // Always allow step 1\r\n    if (step === 2) return verificationStatus.email; // Need email verified\r\n    if (step === 3) return verificationStatus.email && verificationStatus.phone; // Need both email and phone\r\n    return false;\r\n  };\r\n\r\n  const handleSendEmailVerification = async () => {\r\n    try {\r\n      setIsSendingEmail(true);\r\n      toast.loading('Sending verification email...');\r\n      \r\n      // Call backend API to send verification code\r\n      const response = await apiClient.request('/kyc/send-email-verification', {\r\n        method: 'POST',\r\n      });\r\n\r\n      console.log('‚úÖ Email verification sent successfully:', response);\r\n      \r\n      // Show the code input field after successfully sending email\r\n      setShowEmailCodeInput(true);\r\n      setEmailCode(''); // Clear any previous code\r\n      \r\n      toast.success('Verification code sent to your email!');\r\n      setIsSendingEmail(false);\r\n    } catch (error: any) {\r\n      console.error('Error sending verification email:', error);\r\n      toast.error(error.message || 'Failed to send verification email');\r\n      setIsSendingEmail(false);\r\n    }\r\n  };\r\n\r\n  const handleVerifyEmailCode = async () => {\r\n    if (!emailCode || emailCode.length !== 6) {\r\n      toast.error('Please enter a valid 6-digit code');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsVerifyingEmail(true);\r\n      toast.loading('Verifying email...');\r\n      \r\n      console.log('üîë Verifying email code:', emailCode);\r\n      console.log('üë§ Current user:', user);\r\n      \r\n      // Check if we have a token\r\n      const token = localStorage.getItem('auth_token');\r\n      console.log('üîê Auth token exists:', !!token, token ? 'Token length: ' + token.length : 'No token');\r\n      \r\n      if (!token) {\r\n        toast.error('Your session has expired. Please log in again.');\r\n        setIsVerifyingEmail(false);\r\n        return;\r\n      }\r\n      \r\n      // Call backend API to verify code\r\n      const data = await apiClient.request('/kyc/verify-email', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ code: emailCode }),\r\n      });\r\n      \r\n      console.log('‚úÖ Email verification response:', data);\r\n      \r\n      // Refresh user data to get updated verification status\r\n      await refreshUser();\r\n      \r\n      setVerificationStatus(prev => ({ ...prev, email: true }));\r\n      toast.success('Email verified successfully!');\r\n      setIsVerifyingEmail(false);\r\n      setEmailCode('');\r\n      setShowEmailCodeInput(false);\r\n    } catch (error: any) {\r\n      console.error('‚ùå Error verifying email:', error);\r\n      toast.error(error.message || 'Failed to verify email');\r\n      setIsVerifyingEmail(false);\r\n    }\r\n  };\r\n\r\n  const handlePhoneVerification = async () => {\r\n    if (!phoneNumber || phoneNumber.length < 7) {\r\n      toast.error('Please enter a valid phone number');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      toast.loading('Verifying phone number...');\r\n      \r\n      // Call backend API to verify phone\r\n      const fullPhoneNumber = `${selectedCountry.dialCode} ${phoneNumber}`;\r\n      const data = await apiClient.request('/kyc/verify-phone', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ phone: fullPhoneNumber, code: '123456' }), // TODO: Replace with actual SMS code\r\n      });\r\n      \r\n      console.log('‚úÖ Phone verification response:', data);\r\n      \r\n      // Refresh user data to get updated verification status\r\n      await refreshUser();\r\n      \r\n      setVerificationStatus(prev => ({ ...prev, phone: true }));\r\n      toast.success('Phone verified successfully!');\r\n    } catch (error: any) {\r\n      console.error('‚ùå Error verifying phone:', error);\r\n      toast.error(error.message || 'Failed to verify phone');\r\n    }\r\n  };\r\n\r\n  const handleIdentityVerificationComplete = async (inquiryId: string) => {\r\n    try {\r\n      console.log('‚úÖ Persona verification completed with inquiry ID:', inquiryId);\r\n      \r\n      // Refresh user data to get updated verification status\r\n      await refreshUser();\r\n      \r\n      setVerificationStatus(prev => ({ ...prev, identity: true }));\r\n      toast.success('Identity verification completed successfully!');\r\n      \r\n      // If all steps are complete, mark KYC as completed\r\n      if (verificationStatus.email && verificationStatus.phone) {\r\n        await completeKYC();\r\n        toast.success('üéâ KYC verification completed! You can now access all seller features.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating KYC status:', error);\r\n      toast.error('Failed to update verification status');\r\n    }\r\n  };\r\n\r\n  const handleIdentityVerificationError = (error: Error) => {\r\n    console.error('Persona verification error:', error);\r\n    toast.error('Verification failed. Please try again.');\r\n  };\r\n\r\n  const renderCompletionScreen = () => {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"text-center\">\r\n          <div className=\"w-20 h-20 mx-auto mb-6 rounded-full bg-green-500/10 flex items-center justify-center\">\r\n            <CheckCircle className=\"h-10 w-10 text-green-500\" />\r\n          </div>\r\n          <h2 className=\"text-2xl font-bold text-foreground mb-4\">\r\n            KYC Verification Complete!\r\n          </h2>\r\n          <p className=\"text-foreground/60 mb-8\">\r\n            Congratulations! You have successfully completed all verification steps. You can now access all seller features on NXOLand.\r\n          </p>\r\n        </div>\r\n\r\n        <Card className=\"glass-card p-6 border-green-500/30 bg-green-500/5\">\r\n          <div className=\"space-y-4\">\r\n            <h3 className=\"font-semibold text-green-400 mb-4\">All Verification Steps Completed</h3>\r\n            \r\n            <div className=\"space-y-3\">\r\n              {steps.map((step) => (\r\n                <div key={step.id} className=\"flex items-center gap-3 p-3 rounded-lg bg-green-500/10 border border-green-500/20\">\r\n                  <CheckCircle className=\"h-5 w-5 text-green-400 flex-shrink-0\" />\r\n                  <div className=\"flex-1\">\r\n                    <h4 className=\"font-medium text-foreground\">{step.title}</h4>\r\n                    <p className=\"text-sm text-foreground/60\">{step.description}</p>\r\n                  </div>\r\n                  <Badge className=\"bg-green-500/20 text-green-400 border-green-500/30\">\r\n                    Verified\r\n                  </Badge>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        <div className=\"flex gap-3\">\r\n          <Button asChild className=\"flex-1 btn-glow\">\r\n            <Link to=\"/seller/dashboard\">\r\n              Go to Seller Dashboard\r\n              <ArrowRight className=\"h-4 w-4 ml-2\" />\r\n            </Link>\r\n          </Button>\r\n          <Button asChild variant=\"outline\" className=\"flex-1\">\r\n            <Link to=\"/account/dashboard\">\r\n              Back to Account\r\n            </Link>\r\n          </Button>\r\n        </div>\r\n\r\n        <Card className=\"glass-card p-6 border-primary/30\">\r\n          <h3 className=\"font-semibold text-primary mb-4\">What's Next?</h3>\r\n          <ul className=\"space-y-2 text-sm text-foreground/60\">\r\n            <li>‚Ä¢ Start listing your products and services</li>\r\n            <li>‚Ä¢ Access advanced seller analytics</li>\r\n            <li>‚Ä¢ Manage your orders and customers</li>\r\n            <li>‚Ä¢ Set up your payment methods</li>\r\n            <li>‚Ä¢ Build your seller reputation</li>\r\n          </ul>\r\n        </Card>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderStepContent = () => {\r\n    const currentStepData = steps.find(step => step.id === currentStep);\r\n    \r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"text-center\">\r\n          <div className=\"w-20 h-20 mx-auto mb-6 rounded-full bg-primary/10 flex items-center justify-center\">\r\n            {currentStepData?.icon && <currentStepData.icon className=\"h-10 w-10 text-primary\" />}\r\n          </div>\r\n          <h2 className=\"text-2xl font-bold text-foreground mb-4\">\r\n            {currentStepData?.title}\r\n          </h2>\r\n          <p className=\"text-foreground/60 mb-8\">\r\n            {currentStepData?.description}\r\n          </p>\r\n        </div>\r\n\r\n        <Card className=\"glass-card p-6\">\r\n          <div className=\"space-y-4\">\r\n            {currentStep === 1 && (\r\n              <div className=\"space-y-4\">\r\n                {verificationStatus.email ? (\r\n                  <div className=\"text-center\">\r\n                    <div className=\"inline-flex items-center gap-2 px-4 py-2 rounded-full bg-green-500/10 border border-green-500/20 mb-4\">\r\n                      <CheckCircle className=\"h-4 w-4 text-green-500\" />\r\n                      <span className=\"text-sm font-medium text-green-500\">Email Already Verified</span>\r\n                    </div>\r\n                    <p className=\"text-sm text-foreground/60 mb-4\">\r\n                      Your email has been successfully verified\r\n                    </p>\r\n                    <div className=\"p-4 bg-primary/5 rounded-lg border border-primary/20\">\r\n                      <p className=\"font-medium text-primary\">{user?.email}</p>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"text-center\">\r\n                      <p className=\"text-sm text-foreground/60 mb-4\">\r\n                        We'll send a verification code to your email address\r\n                      </p>\r\n                      <div className=\"p-4 bg-primary/5 rounded-lg border border-primary/20\">\r\n                        <p className=\"font-medium text-primary\">{user?.email}</p>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <Button \r\n                      onClick={handleSendEmailVerification} \r\n                      className=\"w-full btn-glow\"\r\n                      disabled={isSendingEmail}\r\n                    >\r\n                      {isSendingEmail ? (\r\n                        <>\r\n                          <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\r\n                          Sending...\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <Mail className=\"h-4 w-4 mr-2\" />\r\n                          Send Verification Code\r\n                        </>\r\n                      )}\r\n                    </Button>\r\n\r\n                                         {showEmailCodeInput && (\r\n                       <div className=\"space-y-4 pt-4 border-t border-border/50\">\r\n                         <div>\r\n                           <label className=\"text-sm font-medium mb-2 block\">\r\n                             Enter Verification Code\r\n                           </label>\r\n                           <Input\r\n                             type=\"text\"\r\n                             placeholder=\"123456\"\r\n                             value={emailCode}\r\n                             onChange={(e) => setEmailCode(e.target.value.replace(/\\D/g, '').slice(0, 6))}\r\n                             maxLength={6}\r\n                             className=\"text-center text-2xl tracking-widest\"\r\n                           />\r\n                         </div>\r\n                         <Button \r\n                           onClick={handleVerifyEmailCode} \r\n                           className=\"w-full btn-glow\"\r\n                           disabled={emailCode.length !== 6 || isVerifyingEmail}\r\n                         >\r\n                           {isVerifyingEmail ? (\r\n                             <>\r\n                               <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\r\n                               Verifying...\r\n                             </>\r\n                           ) : (\r\n                             <>\r\n                               <CheckCircle className=\"h-4 w-4 mr-2\" />\r\n                               Verify Code\r\n                             </>\r\n                           )}\r\n                         </Button>\r\n                       </div>\r\n                     )}\r\n                  </>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {currentStep === 2 && (\r\n              <div className=\"space-y-4\">\r\n                {verificationStatus.phone ? (\r\n                  <div className=\"text-center\">\r\n                    <div className=\"inline-flex items-center gap-2 px-4 py-2 rounded-full bg-green-500/10 border border-green-500/20 mb-4\">\r\n                      <CheckCircle className=\"h-4 w-4 text-green-500\" />\r\n                      <span className=\"text-sm font-medium text-green-500\">Phone Already Verified</span>\r\n                    </div>\r\n                    <p className=\"text-sm text-foreground/60 mb-4\">\r\n                      Your phone number has been successfully verified\r\n                    </p>\r\n                    <div className=\"p-4 bg-primary/5 rounded-lg border border-primary/20\">\r\n                      <p className=\"font-medium text-primary\">{user?.phone || 'Phone number verified'}</p>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"text-center\">\r\n                      <p className=\"text-sm text-foreground/60 mb-4\">\r\n                        We'll send a verification code to your phone number\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"space-y-4\">\r\n                      <div className=\"flex gap-2\">\r\n                        <Popover open={countryOpen} onOpenChange={setCountryOpen}>\r\n                          <PopoverTrigger asChild>\r\n                            <Button\r\n                              variant=\"outline\"\r\n                              role=\"combobox\"\r\n                              aria-expanded={countryOpen}\r\n                              className=\"w-[140px] justify-between\"\r\n                            >\r\n                              <span className=\"flex items-center gap-2\">\r\n                                <span>{selectedCountry.flag}</span>\r\n                                <span>{selectedCountry.dialCode}</span>\r\n                              </span>\r\n                              <ChevronDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\r\n                            </Button>\r\n                          </PopoverTrigger>\r\n                          <PopoverContent className=\"w-[300px] p-0\">\r\n                            <Command>\r\n                              <CommandInput placeholder=\"Search country...\" />\r\n                              <CommandList>\r\n                                <CommandEmpty>No country found.</CommandEmpty>\r\n                                <CommandGroup>\r\n                                  {countries.map((country) => (\r\n                                    <CommandItem\r\n                                      key={country.code}\r\n                                      value={`${country.name} ${country.dialCode} ${country.code}`}\r\n                                      onSelect={() => {\r\n                                        setSelectedCountry(country);\r\n                                        setCountryOpen(false);\r\n                                      }}\r\n                                    >\r\n                                      <div className=\"flex items-center gap-2\">\r\n                                        <span>{country.flag}</span>\r\n                                        <span>{country.name}</span>\r\n                                        <span className=\"text-muted-foreground\">{country.dialCode}</span>\r\n                                      </div>\r\n                                    </CommandItem>\r\n                                  ))}\r\n                                </CommandGroup>\r\n                              </CommandList>\r\n                            </Command>\r\n                          </PopoverContent>\r\n                        </Popover>\r\n                        \r\n                        <Input\r\n                          type=\"tel\"\r\n                          placeholder=\"Phone number\"\r\n                          value={phoneNumber}\r\n                          onChange={(e) => setPhoneNumber(e.target.value)}\r\n                          className=\"flex-1\"\r\n                        />\r\n                      </div>\r\n                      \r\n                      <Button \r\n                        onClick={handlePhoneVerification} \r\n                        className=\"w-full btn-glow\"\r\n                        disabled={!phoneNumber || phoneNumber.length < 7}\r\n                      >\r\n                        <Phone className=\"h-4 w-4 mr-2\" />\r\n                        Send Verification Code\r\n                      </Button>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {currentStep === 3 && (\r\n              <div className=\"space-y-4\">\r\n                {!verificationStatus.identity ? (\r\n                  <PersonaVerification\r\n                    onComplete={handleIdentityVerificationComplete}\r\n                    onError={handleIdentityVerificationError}\r\n                  />\r\n                ) : (\r\n                  <div className=\"text-center py-8\">\r\n                    <div className=\"inline-flex items-center gap-2 px-4 py-2 rounded-full bg-green-500/10 border border-green-500/20 mb-4\">\r\n                      <CheckCircle className=\"h-4 w-4 text-green-500\" />\r\n                      <span className=\"text-sm font-medium text-green-500\">Identity Verified</span>\r\n                    </div>\r\n                    <p className=\"text-sm text-foreground/60\">\r\n                      Your identity has been successfully verified\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Card>\r\n\r\n        {/* KYC Completion Message */}\r\n        {isKYCCompleted() && (\r\n          <Card className=\"glass-card p-6 border-green-500/30 bg-green-500/5\">\r\n            <div className=\"flex items-center gap-3 mb-4\">\r\n              <div className=\"p-2 rounded-full bg-green-500/20\">\r\n                <CheckCircle className=\"h-6 w-6 text-green-500\" />\r\n              </div>\r\n              <div>\r\n                <h3 className=\"font-semibold text-green-500\">KYC Verification Complete!</h3>\r\n                <p className=\"text-sm text-foreground/60\">\r\n                  Your identity has been successfully verified. You can now access all platform features.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex gap-3\">\r\n              <Button asChild className=\"flex-1\">\r\n                <Link to=\"/account/dashboard\">\r\n                  Go to Dashboard\r\n                </Link>\r\n              </Button>\r\n              <Button asChild variant=\"outline\" className=\"flex-1\">\r\n                <Link to=\"/products\">\r\n                  Browse Products\r\n                </Link>\r\n              </Button>\r\n            </div>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Navigation */}\r\n        {!isKYCCompleted() && (\r\n          <div className=\"flex gap-3\">\r\n            {currentStep > 1 && (\r\n              <Button \r\n                variant=\"outline\" \r\n                onClick={() => setCurrentStep(currentStep - 1)}\r\n                className=\"flex-1\"\r\n              >\r\n                <ArrowLeft className=\"h-4 w-4 mr-2\" />\r\n                Back\r\n              </Button>\r\n            )}\r\n            \r\n            {currentStep < 3 && (\r\n              <Button \r\n                onClick={() => {\r\n                  const nextStep = getNextIncompleteStep();\r\n                  if (canNavigateToStep(nextStep)) {\r\n                    setCurrentStep(nextStep);\r\n                  }\r\n                }}\r\n                className=\"flex-1 btn-glow\"\r\n                disabled={!canNavigateToStep(currentStep + 1)}\r\n              >\r\n                {currentStep === 1 && !verificationStatus.email ? 'Complete Email First' : 'Next'}\r\n                <ArrowRight className=\"h-4 w-4 ml-2\" />\r\n              </Button>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Benefits */}\r\n        <Card className=\"glass-card p-6 border-primary/30\">\r\n          <h3 className=\"font-semibold text-primary mb-4\">Why do we need this?</h3>\r\n          <ul className=\"space-y-2 text-sm text-foreground/60\">\r\n            <li>‚Ä¢ Protect buyers and sellers from fraud</li>\r\n            <li>‚Ä¢ Comply with legal and regulatory requirements</li>\r\n            <li>‚Ä¢ Ensure secure transactions on the platform</li>\r\n            <li>‚Ä¢ Build trust in the NXOLand community</li>\r\n          </ul>\r\n        </Card>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Show completion screen if KYC is fully completed\r\n  if (isKYCCompleted()) {\r\n    return (\r\n      <AccountLayout>\r\n        <div className=\"space-y-6\">\r\n          {/* Header */}\r\n          <div>\r\n            <h1 className=\"text-3xl font-black text-foreground mb-2\">\r\n              KYC Verification Complete\r\n            </h1>\r\n            <p className=\"text-foreground/60\">\r\n              All verification steps have been successfully completed\r\n            </p>\r\n          </div>\r\n\r\n          {/* Completion Screen */}\r\n          <Card className=\"glass-card p-8\">\r\n            {renderCompletionScreen()}\r\n          </Card>\r\n        </div>\r\n      </AccountLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AccountLayout>\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div>\r\n          <h1 className=\"text-3xl font-black text-foreground mb-2\">\r\n            Identity Verification\r\n          </h1>\r\n          <p className=\"text-foreground/60\">\r\n            Complete all verification steps to start selling on NXOLand\r\n          </p>\r\n        </div>\r\n\r\n        {/* Progress */}\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-sm font-medium\">Progress</span>\r\n            <span className=\"text-sm text-foreground/60\">\r\n              {Math.round(getProgressPercentage())}%\r\n            </span>\r\n          </div>\r\n          <Progress value={getProgressPercentage()} className=\"h-2\" />\r\n        </div>\r\n\r\n        {/* Steps Overview */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          {steps.map((step) => (\r\n            <Card \r\n              key={step.id} \r\n              className={`glass-card p-4 ${\r\n                currentStep === step.id ? 'border-primary/50 bg-primary/5' : ''\r\n              }`}\r\n            >\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className={`w-8 h-8 rounded-full flex items-center justify-center ${\r\n                  step.status ? 'bg-green-500/20 text-green-400' : \r\n                  currentStep === step.id ? 'bg-primary/20 text-primary' : \r\n                  'bg-foreground/10 text-foreground/40'\r\n                }`}>\r\n                  {step.status ? (\r\n                    <CheckCircle className=\"h-4 w-4\" />\r\n                  ) : (\r\n                    <step.icon className=\"h-4 w-4\" />\r\n                  )}\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                  <h3 className=\"font-semibold text-sm\">{step.title}</h3>\r\n                  <p className=\"text-xs text-foreground/60\">{step.description}</p>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Current Step Content */}\r\n        <Card className=\"glass-card p-8\">\r\n          {renderStepContent()}\r\n        </Card>\r\n      </div>\r\n    </AccountLayout>\r\n  );\r\n};\r\n\r\nexport default KYC;"],"names":["PersonaVerification","onComplete","onError","isLoading","setIsLoading","useState","handleStartVerification","templateId","environmentId","verificationUrl","error","Card","jsxDEV","Shield","Button","Fragment","Loader2","countries","KYC","t","useLanguage","user","refreshUser","completeKYC","useAuth","currentStep","setCurrentStep","selectedCountry","setSelectedCountry","countryOpen","setCountryOpen","phoneNumber","setPhoneNumber","emailCode","setEmailCode","isSendingEmail","setIsSendingEmail","isVerifyingEmail","setIsVerifyingEmail","showEmailCodeInput","setShowEmailCodeInput","verificationStatus","setVerificationStatus","useEffect","nextStep","getNextIncompleteStep","steps","Mail","Phone","User","getProgressPercentage","isKYCCompleted","canNavigateToStep","step","handleSendEmailVerification","toast","response","apiClient","handleVerifyEmailCode","token","data","prev","handlePhoneVerification","fullPhoneNumber","handleIdentityVerificationComplete","inquiryId","handleIdentityVerificationError","renderCompletionScreen","CheckCircle","this","Badge","Link","ArrowRight","renderStepContent","currentStepData","Input","e","Popover","PopoverTrigger","ChevronDown","PopoverContent","Command","CommandInput","CommandList","CommandEmpty","CommandGroup","country","CommandItem","ArrowLeft","AccountLayout","Progress"],"mappings":"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"}