{"version":3,"file":"list-Ch4RO4ki.js","sources":["../../node_modules/lucide-react/dist/esm/icons/info.js","../../src/features/audit-logs/list.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Info = createLucideIcon(\"Info\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M12 16v-4\", key: \"1dtifu\" }],\n  [\"path\", { d: \"M12 8h.01\", key: \"e9boi3\" }]\n]);\n\nexport { Info as default };\n//# sourceMappingURL=info.js.map\n","import React, { useState, useEffect } from 'react';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Input } from '@/components/ui/input';\r\nimport { toast } from 'sonner';\r\nimport { \r\n  Table, \r\n  TableBody, \r\n  TableCell, \r\n  TableHead, \r\n  TableHeader, \r\n  TableRow \r\n} from '@/components/ui/table';\r\nimport { \r\n  Search, \r\n  Filter, \r\n  MoreHorizontal, \r\n  Eye,\r\n  FileText,\r\n  User,\r\n  Calendar,\r\n  Shield,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  Info,\r\n  Loader2,\r\n  Download\r\n} from 'lucide-react';\r\nimport { apiClient } from '@/lib/api';\r\nimport { useAdminList } from '@/hooks/useAdminList';\r\nimport { LoadingSpinner } from '@/components/admin/LoadingSpinner';\r\nimport { EmptyState } from '@/components/admin/EmptyState';\r\n\r\ninterface AuditLog {\r\n  id: number;\r\n  user_id: number;\r\n  user?: {\r\n    id: number;\r\n    name: string;\r\n    email: string;\r\n  };\r\n  action: string;\r\n  entity_type: string;\r\n  entity_id: number | null;\r\n  old_values: Record<string, any> | null;\r\n  new_values: Record<string, any> | null;\r\n  ip_address: string | null;\r\n  user_agent: string | null;\r\n  created_at: string;\r\n}\r\n\r\ninterface Pagination {\r\n  total: number;\r\n  page: number;\r\n  limit: number;\r\n  total_pages: number;\r\n}\r\n\r\ninterface AuditLogsResponse {\r\n  data: AuditLog[];\r\n  pagination: Pagination;\r\n}\r\n\r\nfunction AuditLogsList() {\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  \r\n  const { data: auditLogs, isLoading, pagination, setPagination, searchTerm, setSearchTerm } = useAdminList<AuditLog>({\r\n    endpoint: '/audit-logs',\r\n    initialSearchTerm: '',\r\n    pageSize: 50,\r\n  });\r\n\r\n  const handleExportLogs = async () => {\r\n    try {\r\n      setIsExporting(true);\r\n      const response = await apiClient.request<AuditLog[]>('/audit-logs/export');\r\n      \r\n      // Create and download CSV\r\n      const csv = convertToCSV(response.data);\r\n      const blob = new Blob([csv], { type: 'text/csv' });\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `audit-logs-${new Date().toISOString().split('T')[0]}.csv`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      window.URL.revokeObjectURL(url);\r\n\r\n      toast.success('Audit logs exported', {\r\n        description: 'Your audit logs have been downloaded successfully.',\r\n      });\r\n    } catch (error: any) {\r\n      console.error('Failed to export audit logs:', error);\r\n      toast.error('Failed to export audit logs', {\r\n        description: error.message || 'An error occurred while exporting audit logs',\r\n      });\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const convertToCSV = (logs: AuditLog[]): string => {\r\n    const headers = ['ID', 'User', 'Action', 'Entity Type', 'Entity ID', 'IP Address', 'Created At'];\r\n    const rows = logs.map(log => [\r\n      log.id,\r\n      log.user?.name || log.user?.email || 'Unknown',\r\n      log.action,\r\n      log.entity_type,\r\n      log.entity_id || '',\r\n      log.ip_address || '',\r\n      new Date(log.created_at).toISOString(),\r\n    ]);\r\n\r\n    return [headers.join(','), ...rows.map(row => row.map(cell => `\"${cell}\"`).join(','))].join('\\n');\r\n  };\r\n\r\n  const handleViewLog = (logId: number) => {\r\n    toast.info('Viewing log details', {\r\n      description: `Opening log #${logId}`,\r\n    });\r\n  };\r\n\r\n  const getActionBadge = (action: string) => {\r\n    if (action.includes('create') || action.includes('Created')) {\r\n      return <Badge className=\"bg-green-100 text-green-800\"><CheckCircle className=\"w-3 h-3 mr-1\" />Created</Badge>;\r\n    } else if (action.includes('update') || action.includes('Updated')) {\r\n      return <Badge className=\"bg-blue-100 text-blue-800\"><Info className=\"w-3 h-3 mr-1\" />Updated</Badge>;\r\n    } else if (action.includes('delete') || action.includes('Deleted')) {\r\n      return <Badge className=\"bg-red-100 text-red-800\"><AlertTriangle className=\"w-3 h-3 mr-1\" />Deleted</Badge>;\r\n    } else if (action.includes('login') || action.includes('Logged')) {\r\n      return <Badge className=\"bg-purple-100 text-purple-800\"><Shield className=\"w-3 h-3 mr-1\" />Login</Badge>;\r\n    }\r\n    return <Badge variant=\"secondary\">{action}</Badge>;\r\n  };\r\n\r\n  const filteredLogs = auditLogs?.filter(log => {\r\n    const searchLower = searchTerm.toLowerCase();\r\n    return (\r\n      log.user?.name?.toLowerCase().includes(searchLower) ||\r\n      log.user?.email?.toLowerCase().includes(searchLower) ||\r\n      log.action?.toLowerCase().includes(searchLower) ||\r\n      log.entity_type?.toLowerCase().includes(searchLower) ||\r\n      log.ip_address?.toLowerCase().includes(searchLower)\r\n    );\r\n  }) || [];\r\n\r\n  const totalLogs = pagination?.total || 0;\r\n  const infoLogs = auditLogs?.filter(l => !l.action.includes('error') && !l.action.includes('warning')).length || 0;\r\n  const warningLogs = auditLogs?.filter(l => l.action.includes('warning') || l.action.includes('Failed')).length || 0;\r\n  const securityLogs = auditLogs?.filter(l => l.action.includes('login') || l.action.includes('password')).length || 0;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-foreground\">Audit Logs</h1>\r\n          <p className=\"text-muted-foreground\">System activity and security logs</p>\r\n        </div>\r\n        <Button variant=\"outline\" onClick={handleExportLogs} disabled={isExporting}>\r\n          {isExporting && <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />}\r\n          <Download className=\"w-4 h-4 mr-2\" />\r\n          Export Logs\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Summary Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n        <Card className=\"p-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <Info className=\"w-5 h-5 text-blue-500\" />\r\n            <div>\r\n              <p className=\"text-sm text-muted-foreground\">Total Logs</p>\r\n              <p className=\"text-2xl font-bold\">{totalLogs}</p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n        <Card className=\"p-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <CheckCircle className=\"w-5 h-5 text-green-500\" />\r\n            <div>\r\n              <p className=\"text-sm text-muted-foreground\">Info</p>\r\n              <p className=\"text-2xl font-bold\">{infoLogs}</p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n        <Card className=\"p-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <AlertTriangle className=\"w-5 h-5 text-yellow-500\" />\r\n            <div>\r\n              <p className=\"text-sm text-muted-foreground\">Warnings</p>\r\n              <p className=\"text-2xl font-bold\">{warningLogs}</p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n        <Card className=\"p-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <Shield className=\"w-5 h-5 text-purple-500\" />\r\n            <div>\r\n              <p className=\"text-sm text-muted-foreground\">Security</p>\r\n              <p className=\"text-2xl font-bold\">{securityLogs}</p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <Card className=\"p-4\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"relative flex-1\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4\" />\r\n            <Input \r\n              placeholder=\"Search audit logs...\" \r\n              className=\"pl-10\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n          </div>\r\n          <Button variant=\"outline\">\r\n            <Filter className=\"w-4 h-4 mr-2\" />\r\n            Filter\r\n          </Button>\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Audit Logs Table */}\r\n      <Card>\r\n        {isLoading ? (\r\n          <LoadingSpinner text=\"Loading audit logs...\" />\r\n        ) : filteredLogs.length === 0 ? (\r\n          <EmptyState \r\n            icon={FileText}\r\n            title=\"No audit logs found\"\r\n            description=\"System activity logs will appear here\"\r\n          />\r\n        ) : (\r\n          <>\r\n            <Table>\r\n              <TableHeader>\r\n                <TableRow>\r\n                  <TableHead>User</TableHead>\r\n                  <TableHead>Action</TableHead>\r\n                  <TableHead>Entity</TableHead>\r\n                  <TableHead>Details</TableHead>\r\n                  <TableHead>IP Address</TableHead>\r\n                  <TableHead>Created</TableHead>\r\n                  <TableHead className=\"w-[100px]\">Actions</TableHead>\r\n                </TableRow>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {filteredLogs.map((log) => (\r\n                  <TableRow key={log.id}>\r\n                    <TableCell>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <User className=\"w-4 h-4 text-muted-foreground\" />\r\n                        <div>\r\n                          <div className=\"font-medium\">{log.user?.name || 'Unknown'}</div>\r\n                          <div className=\"text-sm text-muted-foreground\">{log.user?.email}</div>\r\n                        </div>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>{getActionBadge(log.action)}</TableCell>\r\n                    <TableCell>\r\n                      <div>\r\n                        <div className=\"font-medium\">{log.entity_type}</div>\r\n                        {log.entity_id && (\r\n                          <div className=\"text-sm text-muted-foreground\">ID: {log.entity_id}</div>\r\n                        )}\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell className=\"max-w-[300px] truncate\">\r\n                      <div className=\"text-sm\">\r\n                        {(() => {\r\n                          const jsonStr = JSON.stringify(log.new_values || {});\r\n                          return jsonStr.length > 100 ? jsonStr.slice(0, 100) + '...' : jsonStr;\r\n                        })()}\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {log.ip_address ? (\r\n                        <span className=\"font-mono text-sm\">{log.ip_address}</span>\r\n                      ) : (\r\n                        <span className=\"text-muted-foreground\">-</span>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <div className=\"flex items-center gap-1\">\r\n                        <Calendar className=\"w-4 h-4 text-muted-foreground\" />\r\n                        <span className=\"text-sm\">\r\n                          {new Date(log.created_at).toLocaleDateString()}\r\n                        </span>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Button variant=\"ghost\" size=\"sm\" onClick={() => handleViewLog(log.id)}>\r\n                          <Eye className=\"w-4 h-4\" />\r\n                        </Button>\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n\r\n            {/* Pagination */}\r\n            {(pagination?.totalPages || 0) > 1 && (\r\n              <div className=\"flex items-center justify-between px-4 py-3 border-t\">\r\n                <div className=\"text-sm text-muted-foreground\">\r\n                  Showing {(((pagination?.page || 1) - 1) * (pagination?.limit || 50)) + 1} to {Math.min((pagination?.page || 1) * (pagination?.limit || 50), pagination?.total || 0)} of {pagination?.total || 0} results\r\n                </div>\r\n                <div className=\"flex gap-2\">\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={() => setPagination({ ...pagination, page: (pagination?.page || 1) - 1 })}\r\n                    disabled={(pagination?.page || 1) === 1 || isLoading}\r\n                  >\r\n                    Previous\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={() => setPagination({ ...pagination, page: (pagination?.page || 1) + 1 })}\r\n                    disabled={(pagination?.page || 1) >= (pagination?.totalPages || 1) || isLoading}\r\n                  >\r\n                    Next\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuditLogsList;\r\n"],"names":["Info","createLucideIcon","AuditLogsList","isExporting","setIsExporting","useState","auditLogs","isLoading","pagination","setPagination","searchTerm","setSearchTerm","useAdminList","handleExportLogs","response","apiClient","csv","convertToCSV","blob","url","a","toast","error","logs","headers","rows","log","_a","_b","row","cell","handleViewLog","logId","getActionBadge","action","jsxDEV","Badge","CheckCircle","AlertTriangle","Shield","filteredLogs","searchLower","_d","_c","_e","_f","_g","totalLogs","infoLogs","l","warningLogs","securityLogs","Button","Loader2","Download","Card","Search","Input","e","Filter","LoadingSpinner","EmptyState","FileText","Fragment","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","User","jsonStr","Calendar","Eye"],"mappings":"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","x_google_ignoreList":[0]}