var p=Object.defineProperty;var h=(t,e,s)=>e in t?p(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var l=(t,e,s)=>h(t,typeof e!="symbol"?e+"":e,s);import{as as y,at as w,ar as i,au as P}from"./index-B5kKUWkY.js";const g="http://localhost:3000/api";class m{constructor(e){l(this,"baseURL");this.baseURL=e}async request(e,s={}){const o=`${this.baseURL}${e}`,n=localStorage.getItem("auth_token");console.log("🏪 Seller API Request:",{url:o,method:s.method||"GET",endpoint:e,hasToken:!!n});const d={"Content-Type":"application/json",Accept:"application/json",...n&&{Authorization:`Bearer ${n}`},...s.headers},r=await fetch(o,{...s,headers:d});if(!r.ok){const u=await r.json().catch(()=>({}));throw console.error("❌ Seller API Error:",{status:r.status,statusText:r.statusText,error:u}),new Error(u.message||`HTTP ${r.status}: ${r.statusText}`)}const c=await r.json();return console.log("✅ Seller API Success:",{endpoint:e,data:c}),c}async getDashboard(){return(await this.request("/seller/dashboard")).data}async getProducts(){return(await this.request("/seller/products")).data}async createProduct(e){return(await this.request("/seller/products",{method:"POST",headers:{},body:e})).data}async updateProduct(e,s){return(await this.request(`/seller/products/${e}`,{method:"PUT",headers:{},body:s})).data}async deleteProduct(e){await this.request(`/seller/products/${e}`,{method:"DELETE"})}async getOrders(){return(await this.request("/seller/orders")).data}async getPayouts(){return(await this.request("/seller/payouts")).data}async getNotifications(){return(await this.request("/seller/notifications")).data}async listGamingAccount(e){return(await this.request("/seller/listing/gaming-account",{method:"POST",headers:{},body:e})).data}async listSocialAccount(e){return(await this.request("/seller/listing/social-account",{method:"POST",headers:{},body:e})).data}}const q=new m(g),a={all:["seller"],dashboard:()=>[...a.all,"dashboard"],products:()=>[...a.all,"products"],orders:()=>[...a.all,"orders"],payouts:()=>[...a.all,"payouts"],notifications:()=>[...a.all,"notifications"]},b=()=>{const t=y();return w({mutationFn:e=>q.createProduct(e),onSuccess:()=>{t.invalidateQueries({queryKey:a.products()}),i.success("Product created successfully!")},onError:e=>{i.error(e.message||"Failed to create product")}})};new P({defaultOptions:{queries:{staleTime:5*60*1e3,refetchOnWindowFocus:!1}}});export{a,q as s,b as u};
//# sourceMappingURL=sellerApi-wnYgN4Oc.js.map
